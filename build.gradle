buildscript {
    repositories {
        mavenLocal()
        maven {
            name = "MavenCentralSnapshots"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = carnivalVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
        mavenCentral()
    }
}

plugins {
    id "groovy"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "io.micronaut.application" version '1.0.5'
    id 'com.github.ManifestClasspath' version '0.1.0-RELEASE'
}

version "0.1"
group "io.github.carnival-data"

repositories {
    mavenLocal()
    maven {
        name = "MavenCentralSnapshots"
        def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        url = carnivalVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
    }
    mavenCentral()
}

micronaut {
    runtime "netty"
    testRuntime "spock2"
    processing {
        incremental true
        annotations "example.carnival.micronaut.*"
    }
}

dependencies {
    // Groovy
    implementation "org.codehaus.groovy:groovy-all:${groovyVersion}"

    // Tinkerpop
    implementation "org.apache.tinkerpop:gremlin-core:${gremlinVersion}"
    implementation "org.apache.tinkerpop:gremlin-groovy:${gremlinVersion}"
    implementation "org.apache.tinkerpop:tinkergraph-gremlin:${gremlinVersion}"

    // Neo4J
    implementation "org.apache.tinkerpop:neo4j-gremlin:${gremlinVersion}"
    implementation "org.neo4j:neo4j-tinkerpop-api-impl:${neo4jTinkerpopVersion}"
    implementation "org.neo4j.driver:neo4j-java-driver:${neo4JavaDriverVersion}"

    // Carnival
    implementation("io.github.carnival-data:carnival-util:${carnivalVersion}")
    implementation("io.github.carnival-data:carnival-graph:${carnivalVersion}")
    implementation("io.github.carnival-data:carnival-core:${carnivalVersion}")
    implementation("io.github.carnival-data:carnival-vine:${carnivalVersion}")

    // Micronaut
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation('org.postgresql:postgresql:42.3.7')

    // Logging
    runtimeOnly("ch.qos.logback:logback-classic")
}

mainClassName = "example.carnival.micronaut.Application"
java {
    sourceCompatibility = JavaVersion.toVersion('11')
    targetCompatibility = JavaVersion.toVersion('11')
}

test {
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
    if (System.getProperty('logback.configurationFile')) {
        systemProperty("logback.configurationFile", System.getProperty('logback.configurationFile'))
    }
    systemProperty('micronaut.config.files', './carnival-micronaut-home/config/application.yml')    
}

groovydoc {
    classpath = sourceSets.main.runtimeClasspath + classpath
}

shadowJar {
  zip64 true
}

task clearGraphCache(type: Delete) {
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Patients.csv")
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Patients.yaml")
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Encounters.csv")
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Encounters.yaml")
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Conditions.csv")
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Conditions.yaml")
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Medications.csv")
    delete files("./carnival-micronaut-home/data/cache/example-carnival-micronaut-vine-ExampleDbVine-Medications.yaml")

    delete fileTree(dir:'./carnival-micronaut-home/data/graph/app', include: '**')
    delete files('./carnival-micronaut-home/data/graph/app/index')
    delete files('./carnival-micronaut-home/data/graph/app/metrics')
    delete files('./carnival-micronaut-home/data/graph/app/profiles')
    delete files('./carnival-micronaut-home/data/graph/app/schema')
    delete files('./carnival-micronaut-home/data/graph/app/logs')
}

run.jvmArgs('-Xms1024m', '-Xmx8000m')
